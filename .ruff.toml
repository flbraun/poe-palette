preview = true
target-version = "py311"
line-length = 120
select = [
  "F", # Pyflakes
  "E", # pycodestyle
  "W", # pycodestyle
  "C90", # mccabe
  "I", # isort
  "N", # pep8-naming
#  "D", # pydocstyle
  "UP", # pyupgrade
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "ASYNC", #  flake8-async
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "B", # flake8-bugbear
  "A", # flake8-builtins
  "COM", # flake8-commas
#  "CPY", # flake8-copyright
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  "DJ", # flake8-django
  "EM", # flake8-errmsg
  "EXE", # flake8-executable
  "FA", # flake8-future-annotations
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "G", # flake8-logging-format
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
#  "T20", # flake8-print
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "TCH", # flake8-type-checking
  "INT", # flake8-gettext
#  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "TD", # flake8-todos
  "FIX", # flake8-fixme
  "ERA", # eradicate
  "PGH", # pygrep-hooks
  "PL", # Pylint
  "FLY", # flynt
  "NPY", # NumPy-specific rules
  "AIR", # Airflow
  "PERF", # Perflint
  "FURB", # refurb
  "LOG", # flake8-logging
  "RUF", # Ruff-specific rules
]
ignore = [
  "S101", # Use of `assert` detected
  "ANN101", # Missing type annotation for self in method
  "ANN102", # Missing type annotation for cls in classmethod
  "ANN002", # Missing type annotation for *args
  "ANN003", # Missing type annotation for **kwargs
]

[flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"

[isort]
lines-after-imports = 2
